{"version":3,"sources":["config/firebase_keys.js","config/firebase.js","action/contacts.js","action/types.js","components/sidebar/search_block.js","_helpers/functions.js","_helpers/isEmpty.js","_helpers/input_validate.js","components/sidebar/sidebar_head.js","components/sidebar/contact_item.js","components/sidebar/contact_list.js","components/sidebar/sidebar.js","components/content/selected_item.js","components/content/content.js","components/content/burger_toggle.js","components/content/content_container.js","components/main/main.js","App.js","serviceWorker.js","reducers/contactsReducer.js","reducers/rootReducer.js","store/store.js","index.js"],"names":["databaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","databaseRef","ref","phoneBookStorage","contactsRef","child","selectContact","contact","dispatch","type","payload","SearchBlock","searchContacts","e","_this$props","_this","props","contacts","value","target","toLowerCase","filter","item","fullnameValue","fullname","indexOf","phoneValue","phone","emailValue","email","companyValue","company","react_default","a","createElement","className","Input","fluid","icon","placeholder","onChange","this","bind","Component","connect","store","contactList","changeStateValue","setState","Object","defineProperty","name","uploadPhoto","image","progress","concat","put","on","snapshot","Math","round","bytesTransferred","totalBytes","err","console","log","getDownloadURL","then","url","photoUrl","isEmpty","undefined","keys","length","trim","inputValidate","data","errors","match","validate","SidebarHead","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","resetState","objectSpread","initialState","open","close","handleImageChange","files","saveContact","preventDefault","_this$state","state","addContact","Contact","_inputValidate","assertThisInitialized","_this$state2","search_block","Modal","size","onOpen","onClose","trigger","Button","title","closeIcon","Header","content","Content","Form","onSubmit","Image","centered","src","rounded","Progress","percent","success","accept","onClick","color","Icon","Divider","Grid","padded","Row","maxLength","required","Actions","push","set","obj","List","Item","avatar","ContactList","loader","componentDidUpdate","prevProps","prevState","getContacts","nextProps","foundContacts","Loader","active","inline","selection","map","idx","contact_item","key","val","entries","Sidebar","sidebar_head","contact_list","SelectedItem","resetStateToProps","_this$props$contactIn","contactInfo","edit","editClick","removeContact","deleteContact","contactId","handleUpdateContact","_this$props2","updateContact","handleCancelUpdate","componentDidMount","_this2","Fragment","Group","relaxed","Extra","disabled","floated","Confirm","onCancel","onConfirm","selectedContact","remove","update","selected_item","mainSideToggle","document","getElementsByClassName","classList","toggle","BurgerToggle","ContentContainer","burger_toggle","Main","sidebar","content_container","App","main","Boolean","window","location","hostname","contactReducer","arguments","action","rootReducer","combineReducers","contactsReducer","createStore","compose","applyMiddleware","thunk","ReactDOM","render","es","src_App","getElementById","subscribe","getState","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ae9287d.chunk.js","sourcesContent":["const databaseConfig = {\r\n  apiKey: \"AIzaSyBeQcQlfQA5OpY_IZ1Mpi9qTZFiNDw86wY\",\r\n  authDomain: \"phone-book-63384.firebaseapp.com\",\r\n  databaseURL: \"https://phone-book-63384.firebaseio.com\",\r\n  projectId: \"phone-book-63384\",\r\n  storageBucket: \"phone-book-63384.appspot.com\",\r\n  messagingSenderId: \"870252849132\"\r\n};\r\n\r\nexport default databaseConfig","import * as firebase from \"firebase\";\r\nimport 'firebase/storage';\r\n\r\nimport databaseConfig from './firebase_keys'\r\n\r\nfirebase.initializeApp(databaseConfig);\r\nconst databaseRef = firebase.database().ref()\r\n\r\nexport const phoneBookStorage = firebase.storage();\r\n\r\nexport const contactsRef = databaseRef.child('contacts')\r\n\r\n","import { contactsRef } from '../config/firebase'\r\nimport { GET_CONTACTS, SELECT_CONTACT, SEARCH_CONTACTS } from './types'\r\n\r\nexport const getContacts = () => dispatch => {\r\n  contactsRef.on('value', snapshot => {\r\n    dispatch({\r\n      type: GET_CONTACTS,\r\n      payload: snapshot.val() ? Object.entries(snapshot.val()) : []\r\n    })\r\n  })\r\n}\r\n\r\nexport const addContact = contact => dispatch => {\r\n  contactsRef.push().set(contact)\r\n}\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n  contactsRef.child(contactId).remove()\r\n}\r\n\r\nexport const updateContact = (contact, contactId) => dispatch => {\r\n  contactsRef.child(contactId).update({\r\n    fullname: contact.fullname,\r\n    phone: contact.phone,\r\n    email: contact.email,\r\n    company: contact.company,\r\n    photoUrl: contact.photoUrl\r\n  })\r\n}\r\n\r\nexport const selectContact = contact => dispatch => {\r\n  dispatch({\r\n    type: SELECT_CONTACT,\r\n    payload: contact\r\n  })\r\n}\r\n\r\nexport const searchContacts = contacts => dispatch => {\r\n  dispatch({\r\n    type: SEARCH_CONTACTS,\r\n    payload: contacts\r\n  })\r\n}","export const GET_CONTACTS = 'GET_CONTACTS'\r\nexport const SELECT_CONTACT = 'SELECT_CONTACT'\r\nexport const SEARCH_CONTACTS = 'SEARCH_CONTACTS'","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Input } from 'semantic-ui-react'\r\n\r\nimport { searchContacts } from '../../action/contacts'\r\n\r\nclass SearchBlock extends Component {\r\n  searchContacts = e => {\r\n    const { contacts, searchContacts } = this.props\r\n    let value = e.target.value.toLowerCase()\r\n\r\n    let foundContacts = contacts.filter(item => {\r\n      if (value === '') {\r\n        return true\r\n      } else {\r\n        let fullnameValue = item[1].fullname.toLowerCase().indexOf(value) !== -1\r\n        let phoneValue = item[1].phone.toLowerCase().indexOf(value) !== -1\r\n        let emailValue = item[1].email.toLowerCase().indexOf(value) !== -1\r\n        let companyValue = item[1].company.toLowerCase().indexOf(value) !== -1\r\n\r\n        return fullnameValue || phoneValue || emailValue || companyValue\r\n      }\r\n    })\r\n\r\n    searchContacts(foundContacts)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search_block\">\r\n        <Input\r\n          fluid\r\n          icon='search'\r\n          placeholder='Search contact'\r\n          onChange={this.searchContacts.bind(this)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  contacts: store.contacts.contactList\r\n})\r\n\r\nexport default connect(mapStateToProps, { searchContacts })(SearchBlock)\r\n\r\n\r\n","import { phoneBookStorage } from '../config/firebase'\r\n\r\nexport function changeStateValue(e) {\r\n  return (\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  )\r\n}\r\n\r\nexport function uploadPhoto(image, progress) {\r\n  if (!image) {\r\n    return false\r\n  }\r\n  \r\n  const uploadImage = phoneBookStorage.ref(`images/${image.name}`).put(image);\r\n  uploadImage.on('state_changed',\r\n    snapshot => {\r\n      const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n      this.setState({ progress });\r\n    },\r\n    err => {\r\n      console.log(err)\r\n    },\r\n    () => {\r\n      phoneBookStorage.ref('images').child(image.name).getDownloadURL()\r\n        .then(url => {\r\n          this.setState({\r\n            photoUrl: url\r\n          })\r\n        })\r\n    }\r\n  )\r\n}","const isEmpty = value => {\r\n  return (\r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n    (typeof value === 'string' && value.trim().length === 0)\r\n  )\r\n}\r\n\r\nexport default isEmpty\r\n","import isEmpty from './isEmpty'\r\n\r\nconst inputValidate = data => {\r\n  const fullname_regex = /^[a-zа-я ,.'-]+$/i\r\n  const email_regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  const phone_regex = /^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s\\./0-9]*$/g\r\n  const company_regex = /^[a-zа-я0-9():*#@№!?=+ ,.'-]+$/i\r\n  let errors = {}\r\n\r\n  data.fullname = !isEmpty(data.fullname) ? data.fullname : ''\r\n  data.phone = !isEmpty(data.phone) ? data.phone : ''\r\n  data.email = !isEmpty(data.email) ? data.email : ''\r\n  data.company = !isEmpty(data.company) ? data.company : ''\r\n  data.photoUrl = !isEmpty(data.photoUrl) ? data.photoUrl : ''\r\n\r\n  if (!data.fullname.match(fullname_regex)) {\r\n    errors.fullname = 'Name is not valid'\r\n  }\r\n\r\n  if (data.fullname.length < 2) {\r\n    errors.fullname = 'between 2 and 60 symbols'\r\n  }\r\n\r\n  if (!data.phone.match(phone_regex)) {\r\n    errors.phone = 'only: numbers, \"+\", \"(/)\"'\r\n  }\r\n\r\n  if (data.phone.length < 10) {\r\n    errors.phone = 'between 10 and 13 symbols'\r\n  }\r\n\r\n  if (!data.email.match(email_regex)) {\r\n    errors.email = 'email is not valid'\r\n  }\r\n\r\n  if (!data.company.match(company_regex)) {\r\n    errors.email = 'company name is not valid'\r\n  }\r\n\r\n  if (data.company.length < 2) {\r\n    errors.company = 'between 2 and 60 symbols'\r\n  }\r\n\r\n  return {\r\n    errors,\r\n    validate: isEmpty(errors)\r\n  }\r\n}\r\n\r\nexport default inputValidate","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Image,\r\n  Header,\r\n  Icon,\r\n  Modal,\r\n  Divider,\r\n  Form,\r\n  Progress\r\n} from 'semantic-ui-react'\r\n\r\nimport SearchBlock from './search_block'\r\nimport { changeStateValue, uploadPhoto } from '../../_helpers/functions'\r\nimport { addContact } from '../../action/contacts'\r\nimport inputValidate from '../../_helpers/input_validate'\r\n\r\nclass SidebarHead extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.initialState = {\r\n      fullname: '',\r\n      phone: '',\r\n      email: '',\r\n      company: '',\r\n      photoUrl: '',\r\n      image: null,\r\n      open: false,\r\n      progress: 0,\r\n      errors: {}\r\n    }\r\n\r\n    this.state = { ...this.initialState }\r\n\r\n    this.handleImageChange = this.handleImageChange.bind(this)\r\n    this.saveContact = this.saveContact.bind(this)\r\n  }\r\n\r\n  resetState = () => {\r\n    this.setState({ ...this.initialState })\r\n  }\r\n\r\n  open = () => this.setState({ open: true })\r\n\r\n  close = () => this.resetState()\r\n\r\n  handleImageChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0]\r\n      this.setState({ image })\r\n    }\r\n  }\r\n\r\n  saveContact = (e) => {\r\n    e.preventDefault()\r\n\r\n    const { fullname, phone, email, company, photoUrl } = this.state\r\n    const { addContact } = this.props\r\n    const Contact = {\r\n      fullname,\r\n      phone,\r\n      email,\r\n      company,\r\n      photoUrl\r\n    }\r\n    const { errors, validate } = inputValidate(Contact)\r\n\r\n    if (!validate) {\r\n      this.setState({\r\n        errors: errors\r\n      })\r\n\r\n      return false\r\n    }\r\n\r\n    addContact(Contact)\r\n    this.resetState()\r\n  }\r\n\r\n  render() {\r\n    const { fullname, phone, email, company, photoUrl, open, progress, errors, image } = this.state\r\n\r\n    return (\r\n      <div className=\"sidebar__head\">\r\n\r\n        <SearchBlock />\r\n\r\n        <Modal\r\n          size='tiny'\r\n          open={open}\r\n          onOpen={this.open}\r\n          onClose={this.close}\r\n          trigger={<Button title='Add contact' icon='user plus' />}\r\n          closeIcon\r\n        >\r\n          <Header content='Create new contact' />\r\n          <Modal.Content>\r\n            <Form onSubmit={this.saveContact}>\r\n              <div className=\"image__container\">\r\n                <Image\r\n                  centered\r\n                  src={photoUrl || 'https://react.semantic-ui.com/images/wireframe/image.png'}\r\n                  size='small'\r\n                  rounded\r\n                />\r\n                <Progress\r\n                  size='tiny'\r\n                  className={`${progress === 0 ? 'progress-hidden' : null} progress-bar`}\r\n                  percent={progress}\r\n                  success\r\n                />\r\n                <input\r\n                  className=\"file-input\"\r\n                  type='file'\r\n                  accept='image/*'\r\n                  onChange={this.handleImageChange}\r\n                />\r\n                <Button onClick={uploadPhoto.bind(this, image, progress)} color='orange'>\r\n                  <Icon name='upload' /> upload\r\n                </Button>\r\n                {errors.photoUrl ? <div className=\"input-errors\">{errors.photoUrl}</div> : null}\r\n              </div>\r\n              <Divider />\r\n              <Grid padded>\r\n                <Grid.Row>\r\n                  <input\r\n                    icon='user'\r\n                    placeholder='Fullname'\r\n                    name='fullname'\r\n                    value={fullname}\r\n                    onChange={changeStateValue.bind(this)}\r\n                    maxLength='60'\r\n                    required\r\n                  />\r\n                  {errors.fullname ? <div className=\"input-errors\">{errors.fullname}</div> : null}\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                  <input\r\n                    type='text'\r\n                    icon='phone'\r\n                    placeholder='Phone number'\r\n                    name='phone'\r\n                    value={phone}\r\n                    onChange={changeStateValue.bind(this)}\r\n                    maxLength='13'\r\n                    required\r\n                  />\r\n                  {errors.phone ? <div className=\"input-errors\">{errors.phone}</div> : null}\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                  <input\r\n                    type='email'\r\n                    icon='mail'\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={changeStateValue.bind(this)}\r\n                    required\r\n                  />\r\n                  {errors.email ? <div className=\"input-errors\">{errors.email}</div> : null}\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                  <input\r\n                    icon='briefcase'\r\n                    placeholder='Company'\r\n                    name='company'\r\n                    value={company}\r\n                    onChange={changeStateValue.bind(this)}\r\n                    maxLength='60'\r\n                    required\r\n                  />\r\n                  {errors.company ? <div className=\"input-errors\">{errors.company}</div> : null}\r\n                </Grid.Row>\r\n              </Grid>\r\n              <Modal.Actions>\r\n                <Button color='red' onClick={this.close}>\r\n                  <Icon name='remove' /> Close\r\n                </Button>\r\n                <Button\r\n                  type='submit'\r\n                  color='green'\r\n                >\r\n                  <Icon name='checkmark' /> Save\r\n                </Button>\r\n              </Modal.Actions>\r\n            </Form>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { addContact })(SidebarHead)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Image, List } from 'semantic-ui-react'\r\n\r\nimport { selectContact } from '../../action/contacts'\r\n\r\nconst ContactItem = (props) => {\r\n  const contact = props.obj[1]\r\n\r\n  return (\r\n    <List.Item onClick={() => props.selectContact(props.obj)}>\r\n      <Image avatar src={contact.photoUrl || 'https://react.semantic-ui.com/images/wireframe/image.png'} />\r\n      <List.Content>\r\n        <List.Header>{contact.fullname}</List.Header>\r\n        {contact.phone}\r\n      </List.Content>\r\n    </List.Item>\r\n  )\r\n}\r\n\r\nexport default connect(null, { selectContact })(ContactItem)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { List, Loader } from 'semantic-ui-react'\r\n\r\nimport ContactItem from './contact_item'\r\nimport { getContacts } from '../../action/contacts'\r\n\r\n\r\nclass ContactList extends Component {\r\n  state = {\r\n    contacts: [],\r\n    loader: true\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getContacts()\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      contacts: nextProps.foundContacts\r\n    })\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (this.props.contacts !== prevProps.contacts) {\r\n      this.setState({\r\n        contacts: this.props.contacts,\r\n        loader: false\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { contacts, loader } = this.state\r\n\r\n    return (\r\n      <div className=\"contact__list\">\r\n        {loader ?\r\n          <Loader active inline='centered' />\r\n          :\r\n          <List selection>\r\n            {contacts.map((obj, idx) => {\r\n              return (\r\n                <ContactItem\r\n                  key={idx}\r\n                  obj={obj}\r\n                />\r\n              )\r\n            })}\r\n          </List>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  contacts: store.contacts.contactList,\r\n  foundContacts: store.contacts.foundContacts\r\n})\r\n\r\nexport default connect(mapStateToProps, { getContacts })(ContactList)","import React from 'react'\r\n\r\nimport SidebarHead from './sidebar_head'\r\nimport ContactList from './contact_list'\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <SidebarHead />\r\n      <ContactList />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Item,\r\n  Divider,\r\n  Confirm\r\n} from 'semantic-ui-react'\r\n\r\nimport { deleteContact, selectContact, updateContact } from '../../action/contacts'\r\nimport { changeStateValue, uploadPhoto } from '../../_helpers/functions'\r\nimport inputValidate from '../../_helpers/input_validate'\r\n\r\nclass SelectedItem extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.initialState = {\r\n      fullname: '',\r\n      phone: '',\r\n      email: '',\r\n      company: '',\r\n      photoUrl: '',\r\n      image: null,\r\n      progress: 0,\r\n      open: false,\r\n      edit: false,\r\n      errors: {}\r\n    }\r\n\r\n    this.state = { ...this.initialState }\r\n    this.handleImageChange = this.handleImageChange.bind(this)\r\n  }\r\n\r\n  resetState = () => {\r\n    this.setState({ ...this.initialState })\r\n  }\r\n\r\n  resetStateToProps = () => {\r\n    const { fullname, phone, email, company, photoUrl } = this.props.contactInfo\r\n\r\n    this.setState({\r\n      fullname,\r\n      phone,\r\n      email,\r\n      company,\r\n      photoUrl,\r\n      edit: false,\r\n      errors: {}\r\n    })\r\n  }\r\n\r\n  open = () => this.setState({ open: true })\r\n\r\n  close = () => this.setState({ open: false })\r\n\r\n  editClick = () => {\r\n    this.setState({\r\n      edit: true,\r\n    })\r\n  }\r\n\r\n  handleImageChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0]\r\n      this.setState({ image })\r\n    }\r\n  }\r\n\r\n  removeContact = () => {\r\n    const { deleteContact, selectContact, contactId } = this.props\r\n\r\n    deleteContact(contactId)\r\n    selectContact(null)\r\n    this.setState({ open: false })\r\n  }\r\n\r\n  handleUpdateContact = (e) => {\r\n    e.preventDefault()\r\n\r\n    const { fullname, phone, email, company, photoUrl } = this.state\r\n    const { updateContact, contactId } = this.props\r\n    const Contact = {\r\n      fullname,\r\n      phone,\r\n      email,\r\n      company,\r\n      photoUrl\r\n    }\r\n    const { errors, validate } = inputValidate(Contact)\r\n\r\n    if (!validate) {\r\n      this.setState({\r\n        errors: errors\r\n      })\r\n\r\n      return false\r\n    }\r\n\r\n    updateContact(Contact, contactId)\r\n\r\n    this.setState({\r\n      edit: false,\r\n      errors: {}\r\n    })\r\n  }\r\n\r\n  handleCancelUpdate = () => {\r\n    this.resetStateToProps()\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.resetStateToProps()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.contactInfo !== this.props.contactInfo) {\r\n      this.resetStateToProps()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { open, edit, fullname, phone, email, company, image, progress, photoUrl, errors } = this.state\r\n    const { contactId } = this.props\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Item.Group relaxed>\r\n          <Item>\r\n            <div className=\"image__container\">\r\n              <Item.Image\r\n                src={photoUrl || 'https://react.semantic-ui.com/images/wireframe/image.png'}\r\n                size='small'\r\n                rounded\r\n              />\r\n              {edit ?\r\n                <React.Fragment>\r\n                  <input\r\n                    className=\"file-input\"\r\n                    type='file'\r\n                    accept='image/*'\r\n                    onChange={this.handleImageChange}\r\n                  />\r\n                  <Button onClick={uploadPhoto.bind(this, image, progress)} color='orange'>\r\n                    <Icon name='upload' /> upload\r\n                </Button>\r\n                </React.Fragment>\r\n                :\r\n                null\r\n              }\r\n            </div>\r\n            <Item.Content>\r\n              <form onSubmit={(e) => this.handleUpdateContact(e)}>\r\n                <Item.Extra>\r\n                  <Icon name='user' />\r\n                  <input\r\n                    className=\"item__input\"\r\n                    name='fullname'\r\n                    value={fullname}\r\n                    onChange={changeStateValue.bind(this)}\r\n                    disabled={edit ? false : true}\r\n                    maxLength='60'\r\n                  />\r\n                  {errors.fullname ? <div className=\"input-errors\">{errors.fullname}</div> : null}\r\n                </Item.Extra>\r\n                <Item.Extra>\r\n                  <Icon name='phone' />\r\n                  <input\r\n                    className=\"item__input\"\r\n                    name='phone'\r\n                    value={phone}\r\n                    onChange={changeStateValue.bind(this)}\r\n                    disabled={edit ? false : true}\r\n                    maxLength='13'\r\n                  />\r\n                  {errors.phone ? <div className=\"input-errors\">{errors.phone}</div> : null}\r\n                </Item.Extra>\r\n                <Divider />\r\n                <Item.Extra>\r\n                  <Icon name='mail' />\r\n                  <input\r\n                    className=\"item__input\"\r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={changeStateValue.bind(this)}\r\n                    disabled={edit ? false : true}\r\n                  />\r\n                  {errors.email ? <div className=\"input-errors\">{errors.email}</div> : null}\r\n                </Item.Extra>\r\n                <Item.Extra>\r\n                  <Icon name='briefcase' />\r\n                  <input\r\n                    className=\"item__input\"\r\n                    name='company'\r\n                    value={company}\r\n                    onChange={changeStateValue.bind(this)}\r\n                    disabled={edit ? false : true}\r\n                    maxLength='60'\r\n                  />\r\n                  {errors.company ? <div className=\"input-errors\">{errors.company}</div> : null}\r\n                </Item.Extra>\r\n                {edit ?\r\n                  <React.Fragment>\r\n                    <Button\r\n                      type='submit'\r\n                      color='green'\r\n                      title='Save'\r\n                      icon='save'\r\n                      floated='right'\r\n                    />\r\n                    <Button\r\n                      color='orange'\r\n                      title='Cancel'\r\n                      icon='delete'\r\n                      floated='right'\r\n                      onClick={this.handleCancelUpdate}\r\n                    />\r\n                  </React.Fragment>\r\n                  :\r\n                  null\r\n                }\r\n              </form>\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n        <Item.Extra>\r\n          <Button\r\n            floated='right'\r\n            icon='trash alternate outline'\r\n            color='red'\r\n            title='Delete'\r\n            onClick={this.open}\r\n          />\r\n          <Confirm\r\n            size='mini'\r\n            open={open}\r\n            onCancel={this.close}\r\n            onConfirm={() => this.removeContact(contactId)}\r\n          />\r\n          <Button\r\n            color='yellow'\r\n            title='Edit'\r\n            icon='edit'\r\n            floated='right'\r\n            onClick={this.editClick}\r\n          />\r\n        </Item.Extra>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  contacts: store.contacts.contactList,\r\n  contactInfo: store.contacts.selectedContact[1],\r\n  contactId: store.contacts.selectedContact[0]\r\n})\r\n\r\nexport default connect(mapStateToProps,\r\n  {\r\n    deleteContact,\r\n    selectContact,\r\n    updateContact\r\n  })\r\n  (SelectedItem)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport SelectedItem from './selected_item'\r\n\r\nclass Content extends Component {\r\n  render() {\r\n    const { contact } = this.props\r\n\r\n    if (contact) {\r\n      return (\r\n        <div className=\"main__content--item\">\r\n          <SelectedItem />\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"detail-placeholder\">\r\n          Select a contact\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  contact: store.contacts.selectedContact\r\n})\r\n\r\nexport default connect(mapStateToProps)(Content)\r\n","import React from 'react'\r\n\r\nconst mainSideToggle = () => {\r\n  const content = document.getElementsByClassName('main__content')[0]\r\n  content.classList.toggle('toggle-content')\r\n}\r\n\r\n\r\nconst BurgerToggle = () => {\r\n  return (\r\n    <div className=\"burger-menu\" onClick={mainSideToggle}>\r\n      <div className=\"burger-menu-container\">\r\n        <div className=\"burger-menu--line\"></div>\r\n        <div className=\"burger-menu--line\"></div>\r\n        <div className=\"burger-menu--line\"></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BurgerToggle\r\n","import React from 'react'\r\n\r\nimport Content from './content'\r\nimport BurgerToggle from './burger_toggle'\r\n\r\nconst ContentContainer = () => {\r\n  return (\r\n    <div className=\"main__content\">\r\n      <BurgerToggle />\r\n      <Content />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContentContainer\r\n","import React from 'react'\r\n\r\nimport Sidebar from '../sidebar/sidebar'\r\nimport ContentContainer from '../content/content_container'\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Sidebar />\r\n      <ContentContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\r\n\r\nimport Main from './components/main/main'\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_CONTACTS, SELECT_CONTACT, SEARCH_CONTACTS } from '../action/types'\r\n\r\nconst initialState = {\r\n  contactList: [],\r\n  selectedContact: null,\r\n  foundContacts: []\r\n}\r\n\r\nconst contactReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contactList: action.payload\r\n      }\r\n    case SELECT_CONTACT:\r\n      return {\r\n        ...state,\r\n        selectedContact: action.payload\r\n      }\r\n    case SEARCH_CONTACTS:\r\n      return {\r\n        ...state,\r\n        foundContacts: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default contactReducer","import { combineReducers } from 'redux'\r\n\r\nimport contactsReducer from './contactsReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  contacts: contactsReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { rootReducer } from '../reducers/rootReducer'\r\n\r\nconst initialState = {}\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport './styles/index.css';\r\nimport './styles/media.css'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store/store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n\r\nstore.subscribe(() => store.getState());\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}